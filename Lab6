3)
CREATE OR REPLACE function acc2(year1 in varchar) return number as
  2  counter integer;
  3  BEGIN
  4  SELECT count(*) INTO counter
  5  FROM ACCIDENT a
  6  WHERE extract(year FROM accd_date)=year1;
  7  dbms_output.put_line('Total Accidents Function');
  8  return counter;
  9  END;
 10  /

Function created.

SQL>
SQL> set serveroutput on;
SQL> declare year integer;
  2  BEGIN
  3  year:=acc2(2020);
  4  dbms_output.put_line(year);
  5  END;
  6  /
Total Accidents Function
0

PL/SQL procedure successfully completed.

SQL>
SQL> declare n number(2);
  2  BEGIN
  3  n:=acc2(2000);
  4  dbms_output.put_line('No of accidents: '||n);
  5  END;
  6  /
Total Accidents Function
No of accidents: 1

PL/SQL procedure successfully completed.


5)
CREATE OR REPLACE procedure acc1(loc in varchar) IS
    rno INTEGER;
    BEGIN
    For item in(
    SELECT * FROM ACCIDENT WHERE ACCIDENT.location=loc
    ) LOOP
    dbms_output.put_line('Report Number : '||item.report_number);
    dbms_output.put_line('Accident Date : '||item.accd_date);
    dbms_output.put_line('Location : '||item.location);
   END LOOP;
   END;
   /

Procedure created.

 set serveroutput on;
 declare
    BEGIN
    acc1('Mumbai');
   END;
    /
Report Number : 9
Accident Date : 04-NOV-00
Location : Mumbai

PL/SQL procedure successfully completed.

-------------------------------------------------------------------------------------------
q3)
CREATE OR REPLACE FUNCTION total_accidents_in_year(p_year IN NUMBER)
RETURN NUMBER
IS
    v_total_accidents NUMBER;
BEGIN
    -- Initialize the variable to hold the total number of accidents
    v_total_accidents := 0;
    
    -- Query to count the number of accidents in the given year
    SELECT COUNT(*)
    INTO v_total_accidents
    FROM ACCIDENT
    WHERE EXTRACT(YEAR FROM accd_date) = p_year;
    
    -- Return the total number of accidents
    RETURN v_total_accidents;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        -- Handle the case where no accidents are found for the given year
        RETURN 0;
END;
/

DECLARE
    accidents_in_2005 NUMBER;
BEGIN
    accidents_in_2005 := total_accidents_in_year(2005);
    DBMS_OUTPUT.PUT_LINE('Total accidents in 2005: ' || accidents_in_2005);
END;
/


4q)
CREATE OR REPLACE PROCEDURE display_total_damage(
    p_driver_id IN VARCHAR2,
    p_year IN NUMBER
)
IS
    v_total_damage NUMBER;
BEGIN
    -- Initialize the variable to hold the total damage
    v_total_damage := 0;
    
    -- Query to sum the damage caused by the specified driver in the given year
    SELECT SUM(p.damage_amount)
    INTO v_total_damage
    FROM PARTICIPATED p
    JOIN ACCIDENT a ON p.report_number = a.report_number
    WHERE p.driver_id# = p_driver_id
    AND EXTRACT(YEAR FROM a.accd_date) = p_year;

    -- Display the total damage
    DBMS_OUTPUT.PUT_LINE('Total damage caused by driver ' || p_driver_id || ' in ' || p_year || ': ' || v_total_damage);
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        -- Handle the case where no data is found for the specified driver and year
        DBMS_OUTPUT.PUT_LINE('No data found for driver ' || p_driver_id || ' in ' || p_year);
END;
/

BEGIN
    display_total_damage('1234', 2000);
END;
/

----------------------------------------------------------------------------------------------------------------------
OWN

3)
create or replace function tot_accident(year_ac number)
  2  return number is
  3  tot_no number;
  4  begin
  5  select count(*) into tot_no
  6  from accident
  7  where extract(year from accident.accd_date)=year_ac;
  8  return tot_no;
  9  end;
 10  /

Function created.

declare
  2      a number;
  3      year_accd number:=&year_accd;
  4      begin
  5      a:=tot_accident(year_accd);
  6      dbms_output.put_line(a||' number of accidents in that year');
  7      end;
  8      /
Enter value for year_accd: 2002
old   3:     year_accd number:=&year_accd;
new   3:     year_accd number:=2002;
1 number of accidents in that year

PL/SQL procedure successfully completed.


